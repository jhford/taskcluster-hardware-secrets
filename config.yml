defaults:
  # Application specific configuration keys
  app:
    # Prefix for exchanges, should always be v1/
    exchangePrefix: v1/
    publishMetaData: false

  # taskcluster credentials the service should use
  # NOTE: These credentials are where the temporary credentials are derived
  # from.  These are credentials to do things like monitor the service, etc
  taskcluster:
    authBaseUrl:      https://auth.taskcluster.net/v1
    scopeBase: !env TASKCLUSTER_SCOPE_BASE
    credentialsExpire: !env TASKCLUSTER_CREDENTIALS_EXPIRE
    allowedIps: !env:list TASKCLUSTER_ALLOWED_IPS
    credentials:
      clientId: !env TASKCLUSTER_CLIENT_ID
      accessToken: !env TASKCLUSTER_ACCESS_TOKEN

  # Configuration for server
  server:
    publicUrl: "https://host-secrets.taskcluster.net"
    port: !env:number PORT
    env: !env NODE_ENV
    forceSSL: !env:bool FORCE_SSL
    trustProxy: !env:bool TRUST_PROXY

development:
  taskcluster:
    scopeBase: "assume:project:testing-host-secrets:host:"
    credentialsExpire: 1 day
    allowedIps:
      - "0.0.0.0/0"
  server:
    forceSSL: false
    trustProxy: true
    port: 60401

production:
  # We don't publish metadata because this service will be deployed in multiple
  # places and don't want to confuse things
  # overwrite defaults for production
  server:
    forceSSL:                 true
    trustProxy:               true
    env:                      'production'

test:
  # overwrite defaults for test
  taskcluster:
    allowedIps:
      - "0.0.0.0/0"
    scopeBase: 'assume:project:releng:host:'
    credentialsExpire: '12 hours'
    credentials:
      clientId:       'fake-client-id'
      accessToken:    'fake-access-token'
  server:
    port:             60401
    publicUrl:        'http://localhost:60401'
    env:              development
    forceSSL:         false
    trustProxy:       true
