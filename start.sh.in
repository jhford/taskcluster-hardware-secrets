#!/bin/bash

# Since we want to ensure that we only ever use the accompanying version of
# Node.js, we don't include the old $PATH.  The only non-bundled binary we need
# is which, and event that's not much of a need

which=$(which which)
bindir="<<<BINDIR>>>"
export PATH="$bindir:$bindir/../../yarn/bin"
NODE_PATH="$bindir/../lib/node_modules:$bindir/../../code/node_modules"
export NODE_PATH

echo Starting up taskcluster-host-secrets
echo Using $($which node) version $(node --version)
echo Using $($which npm) version $(npm --version)
echo Using $($which yarn) version $(yarn --version)
echo Using PATH of "$PATH"
echo Using NODE_PATH of "$NODE_PATH"

scope_base=${TASKCLUSTER_SCOPE_BASE}
clientid_base=${TASKCLUSTER_CLIENT_ID_BASE}
expires=${TASKCLUSTER_CREDENTIALS_EXPIRE}
allowed_ips=${TASKCLUSTER_ALLOWED_IPS}
clientid=${TASKCLUSTER_CLIENT_ID}
token=${TASKCLUSTER_ACCESS_TOKEN}
port=${PORT}
forcessl=${FORCE_SSL:-true}
trustproxy=${TRUST_PROXY:-false}
env=${NODE_ENV:-production}

while [ $# -gt 0 ] ; do
  case $1 in 
    --scope-base)
      scope_base=$2
      shift 2
      ;;
    --client-id-base)
      clientid_base=$2
      shift 2
      ;;
    --expires)
      expires=$2
      shift 2
      ;;
    --allowed-ips)
      allowed_ips=$2
      shift 2
      ;;
    --client-id)
      clientid=$2
      shift 2
      ;;
    --token)
      token=$2
      shift 2
      ;;
    --port)
      port=$2
      shift 2
      ;;
    --force-ssl)
      forcessl=$2
      shift 2
      ;;
    --trust-proxy)
      trustproxy=$2
      shift 2
      ;;
    --env)
      env=$2
      shift 2
      ;;
  esac
done

misarg () {
  echo Specify either Env $1 or CLI arg $2
  exit 1
}

test "$scope_base" || misarg TASKCLUSTER_SCOPE_BASE --scope-base
test "$clientid_base" || misarg TASKCLUSTER_CLIENT_ID_BASE --client-id-base
test "$expires" || misarg TASKCLUSTER_CREDENTIALS_EXPIRE --expires
test "$allowed_ips" || misarg TASKCLUSTER_ALLOWED_IPS --allowed-ips
test "$clientid" || misarg TASKCLUSTER_CLIENT_ID --client-id
test "$token" || misarg TASKCLUSTER_ACCESS_TOKEN --token
test "$port" || misarg PORT --port
test "$env" || misarg NODE_ENV --env
test "$trustproxy" || misarg TRUST_PROXY --trustproxy
test "$forcessl" || misarg FORCE_SSL --forcessl

export DEBUG="* -aws -babel -superagent -base:valildator -eslint* -express:* -body-parse:* -azure:*"
export TASKCLUSTER_SCOPE_BASE=$scope_base
export TASKCLUSTER_CLIENT_ID_BASE=$clientid_base
export TASKCLUSTER_CREDENTIALS_EXPIRE=$expires
export TASKCLUSTER_ALLOWED_IPS=$allowed_ips
export TASKCLUSTER_CLIENT_ID=$clientid
export TASKCLUSTER_ACCESS_TOKEN=$token
export PORT=$port
export NODE_ENV=$env
export TRUST_PROXY=$trustproxy
export FORCE_SSL=$forcessl

cd $bindir/../../code/
/usr/bin/nohup node lib/main server \
  2>/var/log/taskcluster-host-secrets.stderr.log \
  1>/var/log/taskcluster-host-secrets.stdout.log &
